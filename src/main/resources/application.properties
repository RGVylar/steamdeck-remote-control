spring.application.name=steamdeck-remote-control
server.address=0.0.0.0

#spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}


# Producer JSON
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all

# Consumer JSON
spring.kafka.consumer.group-id=remote-executor-${app.device-id}
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.mugreparty.steamdeck_remote_control.dto,com.mugreparty.steamdeck_remote_control.dto.payload,com.mugreparty.steamdeck_remote_control.enums
spring.kafka.consumer.properties.spring.json.value.default.type=com.mugreparty.steamdeck_remote_control.dto.CommandDto
spring.kafka.consumer.properties.spring.json.use.type.headers=false 

spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.mugreparty.steamdeck_remote_control.*,*
# (y si quieres) empezar por lo nuevo:
spring.kafka.consumer.auto-offset-reset=latest


app.device-id=local
app.kafka.topic.commands=commands